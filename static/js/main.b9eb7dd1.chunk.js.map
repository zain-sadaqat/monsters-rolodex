{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","key","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredData","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,G,kBAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACRC,IAAI,YACJ,6BAAqBL,EAAMG,QAAQG,MAA1BN,EAAMO,KACf,4BAAIP,EAAMG,QAAQK,aCJXC,EAAW,SAACT,GACvB,OACE,qBAAKC,UAAU,YAAf,SAEID,EAAMU,SAASC,KAAI,SAAAR,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNlBQ,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACtC,OACI,uBAAOb,UAAU,SAASc,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCiCnEG,E,kDAhCb,aAAc,IAAD,8BACX,gBAOFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAPtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJJ,E,gEAYQ,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,+BAGhC,IAAD,EACyBC,KAAKN,MAA9Bb,EADA,EACAA,SAAUU,EADV,EACUA,YACXU,EAAepB,EAASqB,QAAO,SAAA5B,GACnC,OAAOA,EAAQG,KAAK0B,cAAcC,SAASb,EAAYY,kBAEzD,OACE,sBAAK/B,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CAAWY,YAAY,aAAaC,aAAce,KAAKf,eACvD,cAAC,EAAD,CAAUJ,SAAUoB,W,GA5BRI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b9eb7dd1.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\nexport const Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <img src={`https://robohash.org/${props.monster.id}?set=set5&size=180x180`}\n      alt=\"monster\" />\n      <h1 key={props.key}>{props.monster.name}</h1>\n      <p>{props.monster.email}</p>\n    </div>\n  )\n}\n","import React from \"react\";\nimport \"./card-list.styles.css\";\nimport {Card} from '../card/card.component';\n\nexport const CardList = (props) => {\n  return (\n    <div className='card-list'>\n      {\n        props.monsters.map(monster => (\n            <Card key={monster.id} monster={monster} />\n          )\n          )\n        }\n    </div>\n  )\n}\n","import React from 'react'\nimport './search-box.styles.css';\n\nexport const SearchBox = ({placeholder, handleChange}) => {\n  return (\n      <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange} />\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}))\n  }\n\n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredData = monsters.filter(monster => {\n      return monster.name.toLowerCase().includes(searchField.toLowerCase())\n    })\n    return (\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox placeholder=\"search ...\" handleChange={this.handleChange}/>\n      <CardList monsters={filteredData} />\n    </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}